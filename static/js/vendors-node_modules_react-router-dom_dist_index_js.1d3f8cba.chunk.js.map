{"version":3,"file":"static/js/vendors-node_modules_react-router-dom_dist_index_js.1d3f8cba.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: actionResult.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      \"startTransition\" in React\n        ? React.startTransition(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      \"startTransition\" in React\n        ? React.startTransition(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      \"startTransition\" in React\n        ? React.startTransition(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      \"startTransition\" in React\n        ? React.startTransition(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      \"startTransition\" in React\n        ? React.startTransition(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","instance","Function","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","indexOf","has","get","set","Wrapper","getPrototypeOf","this","constructor","Object","create","enumerable","writable","configurable","Action","ResultType","PopStateEventType","createMemoryHistory","options","entries","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","map","entry","index","createMemoryLocation","state","clampIndex","action","Pop","listener","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","_window$location","usr","createHashHistory","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","base","document","querySelector","href","getAttribute","url","hashIndex","slice","invariant","message","Error","cond","console","warn","getHistoryState","idx","current","_extends","random","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","computeScore","forEach","_route$path","includes","_step","_iterator","explodeOptionalSegments","exploded","segments","split","arr","_segments","arrayWithHoles","iterableToArray","nonIterableRest","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","array","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref3","toPathname","_ref3$search","_ref3$hash","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","_createClass","DeferredData","reject","_this","pendingKeysSet","subscribers","deferredKeys","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref4","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","defineProperty","aborted","delete","emit","settledKey","subscriber","_this3","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","cancel","resolve","subscribe","sent","abrupt","stop","_x","size","_ref2","_ref5","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","_step2","mergeLoaderData","_iterator2","deleteBlocker","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","userReplace","blockerKey","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","doneFetcher","_context6","setFetcherError","isFetchActionRedirect","staleKey","_handleFetcherLoader","_callee7","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref6","redirectLocation","isDifferentBasename","redirectHistoryAction","_state$navigation","_context8","revalidate","_isFetchActionRedirect","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step3","_iterator3","_step4","doneKeys","_iterator4","landedId","_step5","yeetedKeys","_iterator5","_step5$value","newBlocker","blocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","userMatches","createUseMatchesMatch","y","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","_step6","_iterator6","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isSubmissionNavigation","isValidMethod","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_callLoaderOrAction","_callee16","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","runHandler","handler","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","context","finish","isResponse","protocol","response","text","statusCode","isDeferredData","deferred","body","_step7","URLSearchParams","_iterator7","_step7$value","File","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","hasOwnProperty","reverse","find","_temp4","_ref11","errorMessage","resolveData","_x73","_x74","_x75","_x76","_x77","_x78","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","delegateYield","_x79","_x80","_x81","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","handle","pathMatches","DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","parse","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","props","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","_useDataRouterState","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","_React$useState","String","AwaitRenderStatus","RouterProvider","fallbackElement","_React$useState3","_React$useState4","setStateImpl","setState","Router","DataRoutes","MemoryRouter","historyRef","_React$useState5","_React$useState6","Navigate","jsonPath","Outlet","Route","_props","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","neverSettledPromise","_React$Component2","_super2","_this$props","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","getFormSubmissionInfo","target","encType","submissionTrigger","attr","FormData","isButtonElement","isInputElement","form","_step2$value","_i","_Object$keys","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","_i2","_entries$_i","val","__type","BrowserRouter","_React$useState2","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","FormImpl","forwardedRef","_ref6$method","onSubmit","fetcherKey","_excluded3","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","useScrollRestoration","storageKey","UNSAFE_DataRouterContext","_ref9","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","UseSubmitImpl","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","UNSAFE_RouteContext","_routeContext$matches","fetcherId","useFetcher","_route$matches","UseFetcher","_React$useState7","_React$useState9","createFetcherForm","_React$useState11","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","unstable_useBlocker","confirm","setTimeout","asyncGeneratorStep","gen","_next","_throw","info","self","_iterableToArray","iter","exports","Op","hasOwn","obj","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","methodName","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","__proto__","awrap","async","skipTempReset","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","arrayLikeToArray"],"sourceRoot":""}